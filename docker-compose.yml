version: "3.4"
services:
  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest
  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Catalog/Catalog.API/Dockerfile
  cart.api:
    image: ${DOCKER_REGISTRY-}cartapi
    build:
      context: .
      dockerfile: Basket/Basket.API/Dockerfile
    depends_on:
      - redis
      - rabitmq
  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Discount/Discount.API/Dockerfile
  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Discount/Discount.Grpc/Dockerfile
    depends_on:
      - discount.api
  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Ordering/Ordering.API/Dockerfile
    depends_on:
      - orderdb
      - rabitmq
  ocelotapigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile
  rabitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    hostname: rabbitmq   
  redis:
    image: redis:alpine
    container_name: redis_db
    restart: always
    ports:
      - 6379:6379
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis-data:/data
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=root  
      - HTTP_PASSWORD=secret
    ports:
      - 8081:8081
    depends_on:
      - redis
  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    restart: always
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
volumes:
  redis-data:
  portainer-data:
  rabbitmqdata: